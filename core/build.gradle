plugins {
  id 'jacoco'
}


[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
eclipse.project.name = appName + '-core'



java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(21)
  }
}

task cleanGeneratedAttacks(type: Delete) {
  delete "src/main/java/generated"
}

task copyGeneratedAttacks(type: Copy) {
  dependsOn cleanGeneratedAttacks
  from("../out/generated")
  into("src/main/java/generated")
  includeEmptyDirs = false
}



tasks.named('compileJava') {
  dependsOn copyGeneratedAttacks
}

sourceSets {
  main {
    java {
      srcDirs += 'src/main/java/generated'
    }
  }
}

dependencies {
  api "com.badlogicgames.gdx:gdx:$gdxVersion"
  api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
  api "com.github.tommyettinger:libgdx-utils-box2d:$utilsBox2dVersion"
  api "com.github.tommyettinger:libgdx-utils:$utilsVersion"
  api "com.badlogicgames.gdx:gdx-ai:1.8.2"
  implementation "com.badlogicgames.gdx:gdx-tools:$gdxVersion"

  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
  testImplementation 'org.mockito:mockito-core:5.10.0'

  if (enableGraalNative == 'true') {
    implementation "io.github.berstanio:gdx-svmhelper-annotations:$graalHelperVersion"
  }
}

test {
  useJUnitPlatform()
}

jacoco {
  toolVersion = "0.8.11"
}

jacocoTestReport {
  dependsOn test // ensure tests are run first

  reports {
    xml.required = false
    csv.required = false
    html.required = true
    html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
  }
}
